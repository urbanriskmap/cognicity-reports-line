'use strict';

var cov_1shomd1ori = function () {
    var path = '/home/travis/build/urbanriskmap/cognicity-bot-core/src/lib/regions.js',
        hash = 'e3e87e36ecf064a2274f8c4d3f83ad5399456834',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/travis/build/urbanriskmap/cognicity-bot-core/src/lib/regions.js',
        statementMap: {
            '0': {
                start: {
                    line: 1,
                    column: 16
                },
                end: {
                    line: 12,
                    column: 1
                }
            },
            '1': {
                start: {
                    line: 15,
                    column: 4
                },
                end: {
                    line: 19,
                    column: 5
                }
            },
            '2': {
                start: {
                    line: 16,
                    column: 8
                },
                end: {
                    line: 16,
                    column: 43
                }
            },
            '3': {
                start: {
                    line: 18,
                    column: 8
                },
                end: {
                    line: 18,
                    column: 20
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 14,
                        column: 15
                    },
                    end: {
                        line: 14,
                        column: 16
                    }
                },
                loc: {
                    start: {
                        line: 14,
                        column: 39
                    },
                    end: {
                        line: 20,
                        column: 1
                    }
                },
                line: 14
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 15,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 15,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 5
                    }
                }, {
                    start: {
                        line: 15,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 5
                    }
                }],
                line: 15
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        f: {
            '0': 0
        },
        b: {
            '0': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});
var regions = (cov_1shomd1ori.s[0]++, {
    bdy: 'bandung',
    blr: 'bengaluru',
    brw: 'broward',
    chn: 'chennai',
    jbd: 'jakarta',
    mdh: 'madhubani',
    mum: 'mumbai',
    krl: 'kerala',
    sby: 'surabaya',
    srg: 'semarang'
});

exports.default = function (instanceRegionCode) {
    cov_1shomd1ori.f[0]++;
    cov_1shomd1ori.s[1]++;

    if (instanceRegionCode in regions) {
        cov_1shomd1ori.b[0][0]++;
        cov_1shomd1ori.s[2]++;

        return regions[instanceRegionCode];
    } else {
        cov_1shomd1ori.b[0][1]++;
        cov_1shomd1ori.s[3]++;

        return null;
    }
};